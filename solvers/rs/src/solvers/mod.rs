pub mod solver_201501_1;
pub mod solver_201501_2;
pub mod solver_202401_1;
pub mod solver_202401_2;
pub mod solver_202402_1;
pub mod solver_202402_2;
pub mod solver_202403_1;
pub mod solver_202403_2;
pub mod solver_202404_1;
pub mod solver_202404_2;
pub mod solver_202405_1;
pub mod solver_202405_2;
pub mod solver_202406_1;
pub mod solver_202406_2;
pub mod solver_202407_1;
pub mod solver_202407_2;
pub mod solver_202408_1;
pub mod solver_202408_2;
pub mod solver_202409_1;
pub mod solver_202409_2;
pub mod solver_202410_1;
pub mod solver_202410_2;
pub mod solver_202411_1;
pub mod solver_202411_2;
pub mod solver_202412_1;
pub mod solver_202412_2;
pub mod solver_202413_1;
pub mod solver_202413_2;
pub mod solver_202414_1;
pub mod solver_202414_2;
pub mod solver_202415_1;
pub mod solver_202415_2;
pub mod solver_202416_1;
pub mod solver_202416_2;
pub mod solver_202417_1;
pub mod solver_202417_2;
pub mod solver_202418_1;
pub mod solver_202418_2;
pub mod solver_202419_1;
pub mod solver_202419_2;
pub mod solver_202420_1;
pub mod solver_202420_2;
pub mod solver_202421_1;
pub mod solver_202421_2;
pub mod solver_202422_1;
pub mod solver_202422_2;
pub mod solver_202423_1;
pub mod solver_202423_2;
pub mod solver_202424_1;
pub mod solver_202424_2;
pub mod solver_202425_1;
pub mod solver_202425_2;

use std::collections::HashMap;

pub fn get_functions() -> HashMap<std::string::String, fn(&str) -> std::string::String> {
    let mut functions: HashMap<std::string::String, fn(&str) -> std::string::String> = HashMap::new();
    functions.insert("201501_1".to_string(), solver_201501_1::solve);
    functions.insert("201501_2".to_string(), solver_201501_2::solve);
    functions.insert("202401_1".to_string(), solver_202401_1::solve);
    functions.insert("202401_2".to_string(), solver_202401_2::solve);
    functions.insert("202402_1".to_string(), solver_202402_1::solve);
    functions.insert("202402_2".to_string(), solver_202402_2::solve);
    functions.insert("202403_1".to_string(), solver_202403_1::solve);
    functions.insert("202403_2".to_string(), solver_202403_2::solve);
    functions.insert("202404_1".to_string(), solver_202404_1::solve);
    functions.insert("202404_2".to_string(), solver_202404_2::solve);
    functions.insert("202405_1".to_string(), solver_202405_1::solve);
    functions.insert("202405_2".to_string(), solver_202405_2::solve);
    functions.insert("202406_1".to_string(), solver_202406_1::solve);
    functions.insert("202406_2".to_string(), solver_202406_2::solve);
    functions.insert("202407_1".to_string(), solver_202407_1::solve);
    functions.insert("202407_2".to_string(), solver_202407_2::solve);
    functions.insert("202408_1".to_string(), solver_202408_1::solve);
    functions.insert("202408_2".to_string(), solver_202408_2::solve);
    functions.insert("202409_1".to_string(), solver_202409_1::solve);
    functions.insert("202409_2".to_string(), solver_202409_2::solve);
    functions.insert("202410_1".to_string(), solver_202410_1::solve);
    functions.insert("202410_2".to_string(), solver_202410_2::solve);
    functions.insert("202411_1".to_string(), solver_202411_1::solve);
    functions.insert("202411_2".to_string(), solver_202411_2::solve);
    functions.insert("202412_1".to_string(), solver_202412_1::solve);
    functions.insert("202412_2".to_string(), solver_202412_2::solve);
    functions.insert("202413_1".to_string(), solver_202413_1::solve);
    functions.insert("202413_2".to_string(), solver_202413_2::solve);
    functions.insert("202414_1".to_string(), solver_202414_1::solve);
    functions.insert("202414_2".to_string(), solver_202414_2::solve);
    functions.insert("202415_1".to_string(), solver_202415_1::solve);
    functions.insert("202415_2".to_string(), solver_202415_2::solve);
    functions.insert("202416_1".to_string(), solver_202416_1::solve);
    functions.insert("202416_2".to_string(), solver_202416_2::solve);
    functions.insert("202417_1".to_string(), solver_202417_1::solve);
    functions.insert("202417_2".to_string(), solver_202417_2::solve);
    functions.insert("202418_1".to_string(), solver_202418_1::solve);
    functions.insert("202418_2".to_string(), solver_202418_2::solve);
    functions.insert("202419_1".to_string(), solver_202419_1::solve);
    functions.insert("202419_2".to_string(), solver_202419_2::solve);
    functions.insert("202420_1".to_string(), solver_202420_1::solve);
    functions.insert("202420_2".to_string(), solver_202420_2::solve);
    functions.insert("202421_1".to_string(), solver_202421_1::solve);
    functions.insert("202421_2".to_string(), solver_202421_2::solve);
    functions.insert("202422_1".to_string(), solver_202422_1::solve);
    functions.insert("202422_2".to_string(), solver_202422_2::solve);
    functions.insert("202423_1".to_string(), solver_202423_1::solve);
    functions.insert("202423_2".to_string(), solver_202423_2::solve);
    functions.insert("202424_1".to_string(), solver_202424_1::solve);
    functions.insert("202424_2".to_string(), solver_202424_2::solve);
    functions.insert("202425_1".to_string(), solver_202425_1::solve);
    functions.insert("202425_2".to_string(), solver_202425_2::solve);
    functions
}

